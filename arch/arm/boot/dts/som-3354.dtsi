/*
 * som-3354.dtsi - Device Tree inclue file for the SOM-3354M with SOM-2xx carriers.
 *
 * Copyright (C) 2015 EMAC Inc.
 * Copyright (C) 2015 QWERTY Embedded Design
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */


#include "am33xx.dtsi"

/ {
	compatible = "emac,som3354", "ti,am33xx";

	cpus {
		cpu@0 {
			cpu0-supply = <&vdd1_reg>;
		};
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x20000000>; /* 512 MB */
	};

	leds {
		pinctrl-names = "default";
		pinctrl-0 = <&leds_pins>;

		compatible = "gpio-leds";

		led@0 {
			label = "status";
			gpios = <&gpio3 4 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};
	};

	vmain: fixedregulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "vmain";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
	};

	backlight {
		compatible = "pwm-backlight";
		pwms = <&ecap2 0 50000 0>;
		brightness-levels = <0 51 53 56 62 75 101 152 255>;
		default-brightness-level = <8>;
	};

	panel {
		compatible = "ti,tilcdc,panel";
		pinctrl-names = "default";
		pinctrl-0 = <&lcd_pins>;
		status = "okay";

		enable-gpios = <&gpio1 13 GPIO_ACTIVE_HIGH>;

		panel-info {
			ac-bias		= <255>;
			ac-bias-intrpt	= <0>;
			dma-burst-sz	= <16>;
			bpp		= <16>;
			fdd		= <0x80>;
			tft-alt-mode	= <0>;
			stn-565-mode	= <0>;
			mono-8bit-mode	= <0>;
			sync-edge	= <0>;
			sync-ctrl	= <0>;
			raster-order	= <1>;
			fifo-th		= <0>;
		};

		display-timings {
			native-mode = <&timing0>;
			timing0: 480x272 {
				hactive		= <480>;
				vactive		= <272>;
				hback-porch     = <1>;
				hfront-porch    = <44>;
				hsync-len       = <45>;
				vback-porch     = <1>;
				vfront-porch    = <13>;
				vsync-len       = <14>;
				clock-frequency = <9000000>;
				hsync-active    = <0>;
				vsync-active    = <0>;
				de-active = <1>;
				pixelclk-active = <1>;
			};
		};
	};

	clocks {
		ref27: ref27 {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <27000000>;
		};
	};
};

&gpmc {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&gpmc_pins>;

	ranges = <0x3 0 0x08000000 0x1000000    /* CS3: DUART */
		  0x4 0 0x09000000 0x1000000>;	/* CS4: CPLD */

	uart@3,0 {
		compatible = "ns16550a";
		reg = <0x3 0x0 0x8>;
		clock-frequency = <18432000>;
		bank-width = <1>;
		reg-shift = <0>;
		reg-io-width = <1>;
		fifo-size = <16>;
		interrupt-parent = <&gpio3>;
		interrupts = <9 1>;
		gpmc,mux-add-data = <0>;
		gpmc,device-width = <1>;
		gpmc,wait-pin = <0>;
		gpmc,cycle2cycle-samecsen = <1>;
		gpmc,cycle2cycle-diffcsen = <1>;
		gpmc,cs-on-ns = <18>;
		gpmc,cs-rd-off-ns = <295>;
		gpmc,cs-wr-off-ns = <295>;
		gpmc,adv-on-ns = <73>;
		gpmc,adv-rd-off-ns = <92>;
		gpmc,adv-wr-off-ns = <110>;
		gpmc,oe-on-ns = <110>;
		gpmc,oe-off-ns = <295>;
		gpmc,we-on-ns = <92>;
		gpmc,we-off-ns = <295>;
		gpmc,rd-cycle-ns = <300>;
		gpmc,wr-cycle-ns = <300>;
		gpmc,access-ns = <276>;
		gpmc,page-burst-access-ns = <18>;
		gpmc,bus-turnaround-ns = <20>;
		gpmc,cycle2cycle-delay-ns = <20>;
		gpmc,wr-access-ns = <276>;
		status = "okay";
	};

	uart@3,8 {
		compatible = "ns16550a";
		reg = <0x3 0x8 0x8>;
		interrupt-parent = <&gpio3>;
		interrupts = <10 1>;
		clock-frequency = <18432000>;
		bank-width = <1>;
		reg-shift = <0>;
		reg-io-width = <1>;
		fifo-size = <16>;
		status = "okay";
	};
};

&mcasp0 {
	#sound-dai-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&mcasp0_pins>;

	status = "okay";

	op-mode = <0>;          /* MCASP_IIS_MODE */
	tdm-slots = <2>;
	/* 4 serializers */
	serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
		2 1 0 0
		>;
	tx-num-evt = <2>;
	rx-num-evt = <2>;
};

&am33xx_pinmux {

	lcd_pins: pinmux_lcd_pins {
		  pinctrl-single,pins = <
			AM33XX_IOPAD(0x8a0, PIN_OUTPUT | MUX_MODE0)	/* lcd_data0 */
			AM33XX_IOPAD(0x8a4, PIN_OUTPUT | MUX_MODE0)	/* lcd_data1 */
			AM33XX_IOPAD(0x8a8, PIN_OUTPUT | MUX_MODE0)	/* lcd_data2 */
			AM33XX_IOPAD(0x8ac, PIN_OUTPUT | MUX_MODE0)	/* lcd_data3 */
			AM33XX_IOPAD(0x8b0, PIN_OUTPUT | MUX_MODE0)	/* lcd_data4 */
			AM33XX_IOPAD(0x8b4, PIN_OUTPUT | MUX_MODE0)	/* lcd_data5 */
			AM33XX_IOPAD(0x8b8, PIN_OUTPUT | MUX_MODE0)	/* lcd_data6 */
			AM33XX_IOPAD(0x8bc, PIN_OUTPUT | MUX_MODE0)	/* lcd_data7 */
			AM33XX_IOPAD(0x8c0, PIN_OUTPUT | MUX_MODE0)	/* lcd_data8 */
			AM33XX_IOPAD(0x8c4, PIN_OUTPUT | MUX_MODE0)	/* lcd_data9 */
			AM33XX_IOPAD(0x8c8, PIN_OUTPUT | MUX_MODE0)	/* lcd_data10 */
			AM33XX_IOPAD(0x8cc, PIN_OUTPUT | MUX_MODE0)	/* lcd_data11 */
			AM33XX_IOPAD(0x8d0, PIN_OUTPUT | MUX_MODE0)	/* lcd_data12 */
			AM33XX_IOPAD(0x8d4, PIN_OUTPUT | MUX_MODE0)	/* lcd_data13 */
			AM33XX_IOPAD(0x8d8, PIN_OUTPUT | MUX_MODE0)	/* lcd_data14 */
			AM33XX_IOPAD(0x8dc, PIN_OUTPUT | MUX_MODE0)	/* lcd_data15 */
			AM33XX_IOPAD(0x8e0, PIN_OUTPUT | MUX_MODE0)	/* lcd_vsync */
			AM33XX_IOPAD(0x8e4, PIN_OUTPUT | MUX_MODE0)	/* lcd_hsync */
			AM33XX_IOPAD(0x8e8, PIN_OUTPUT | MUX_MODE0)	/* lcd_pclk */
			AM33XX_IOPAD(0x8ec, PIN_OUTPUT | MUX_MODE0)	/* lcd_ac_bias_en */
		>;
	};

	mcasp0_pins: mcasp0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x990, PIN_INPUT_PULLDOWN | MUX_MODE0)	/* mcasp0_aclkx.mcasp0_aclkx */
			AM33XX_IOPAD(0x994, PIN_INPUT_PULLDOWN | MUX_MODE0)	/* mcasp0_fsx.mcasp0_fsx */
			AM33XX_IOPAD(0x998, PIN_INPUT_PULLDOWN | MUX_MODE0)	/* mcasp0_axr0.mcasp0_axr0 */
			AM33XX_IOPAD(0x9a8, PIN_INPUT_PULLDOWN | MUX_MODE0)	/* mcasp0_axr1.mcasp0_axr1 */
		>;
	};

	spi0_pins: spi0_pins {
		pinctrl-single,pins = <

			AM33XX_IOPAD(0x950, PIN_INPUT_PULLUP | MUX_MODE0)	/* spi0_sclk.spi0_sclk */
			AM33XX_IOPAD(0x95C, PIN_OUTPUT_PULLUP | MUX_MODE7)	/* spi0_cs0.spi0_cs0 */
			AM33XX_IOPAD(0x954, PIN_INPUT_PULLUP | MUX_MODE0)	/* spi0_d0.spi0_d0 */
			AM33XX_IOPAD(0x958, PIN_INPUT_PULLUP | MUX_MODE0)	/* spi0_d1.spi0_d1 */
			AM33XX_IOPAD(0x960, PIN_OUTPUT_PULLUP | MUX_MODE7)	/* spi0_cs1.spi0_cs1 */
			AM33XX_IOPAD(0x838, PIN_OUTPUT | MUX_MODE7)		/* gpmc_ad14.gpio1_14 */
			AM33XX_IOPAD(0x9e8, PIN_OUTPUT_PULLUP | MUX_MODE7)	/* emu1.gpio3_8 */
			AM33XX_IOPAD(0x9a0, PIN_OUTPUT_PULLUP | MUX_MODE7)	/* mcasp0_aclkr.gpio3_18 */
		>;
	};

	can0_pins: pinmux_can0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x91c, PIN_OUTPUT_PULLUP | MUX_MODE1)	/* mii1_txd3.can0_tx */
			AM33XX_IOPAD(0x920, PIN_INPUT_PULLUP | MUX_MODE1)	/* mii1_txd2.can0_rx */
		>;
	};

	i2c0_pins: pinmux_i2c0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x988, PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_sda.i2c0_sda */
			AM33XX_IOPAD(0x98c, PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_scl.i2c0_scl */
		>;
	};

	vmmc_pins: pinmux_vmmc_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x9e4, PIN_INPUT_PULLUP | MUX_MODE7)		/* emu0.gpio3_7 */
		>;
	};

	gpmc_pins: pinmux_gpmc_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x800, PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad0.gpmc_ad0 */
			AM33XX_IOPAD(0x804, PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad1.gpmc_ad1 */
			AM33XX_IOPAD(0x808, PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad2.gpmc_ad2 */
			AM33XX_IOPAD(0x80c, PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad3.gpmc_ad3 */
			AM33XX_IOPAD(0x810, PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad4.gpmc_ad4 */
			AM33XX_IOPAD(0x814, PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad5.gpmc_ad5 */
			AM33XX_IOPAD(0x818, PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad6.gpmc_ad6 */
			AM33XX_IOPAD(0x81c, PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad7.gpmc_ad7 */

			AM33XX_IOPAD(0x840, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a0.gpmc_a0 */
			AM33XX_IOPAD(0x844, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a1.gpmc_a1 */
			AM33XX_IOPAD(0x848, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a2.gpmc_a2 */
			AM33XX_IOPAD(0x84c, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a3.gpmc_a3 */
			AM33XX_IOPAD(0x850, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a4.gpmc_a4 */
			AM33XX_IOPAD(0x854, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a5.gpmc_a5 */
			AM33XX_IOPAD(0x858, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a6.gpmc_a6 */
			AM33XX_IOPAD(0x85c, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a7.gpmc_a7 */
			AM33XX_IOPAD(0x860, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a8.gpmc_a8 */
			AM33XX_IOPAD(0x864, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a9.gpmc_a9 */
			AM33XX_IOPAD(0x868, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a10.gpmc_a10 */
			AM33XX_IOPAD(0x86c, PIN_OUTPUT | MUX_MODE0)		/* gpmc_a11.gpmc_a11 */


			AM33XX_IOPAD(0x870, PIN_OUTPUT | MUX_MODE2)		/* gpmc_wait0.gpmc_csn4 */
			AM33XX_IOPAD(0x874, PIN_OUTPUT | MUX_MODE2)		/* gpmc_wpn.gpmc_csn5 */
			AM33XX_IOPAD(0x878, PIN_OUTPUT | MUX_MODE2)		/* gpmc_ben1.gpmc_csn6 */
			AM33XX_IOPAD(0x87c, PIN_OUTPUT | MUX_MODE0)		/* gpmc_csn0.gpmc_csn0 */
			AM33XX_IOPAD(0x888, PIN_OUTPUT | MUX_MODE0)		/* gpmc_csn3.gpmc_csn3 */
			AM33XX_IOPAD(0x894, PIN_OUTPUT | MUX_MODE0)		/* gpmc_oen_ren.gpmc_oen_ren */
			AM33XX_IOPAD(0x898, PIN_OUTPUT | MUX_MODE0)		/* gpmc_wen.gpmc_wen */
			AM33XX_IOPAD(0x89c, PIN_OUTPUT | MUX_MODE2)		/* gpmc_ben0_cle.timer5 */

			AM33XX_IOPAD(0x92c, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* mii1_txclk.gpio3_9 */
			AM33XX_IOPAD(0x930, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* mii1_rxclk.gpio3_10 */
			AM33XX_IOPAD(0x890, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* gpmc_advn_ale.gpio2_2 */
			AM33XX_IOPAD(0x9b4, PIN_INPUT_PULLDOWN | MUX_MODE7)	/* xdma_event_intr1.gpio0_20 */
			AM33XX_IOPAD(0x96c, PIN_INPUT_PULLUP | MUX_MODE7)	/* uart0_rtsn.gpio1_9 */
			AM33XX_IOPAD(0x964, PIN_INPUT_PULLUP | MUX_MODE7)	/* eCAP0_in_PWM0_out.gpio0_7 */
		>;
	};

	uart0_pins: pinmux_uart0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x970, PIN_INPUT_PULLUP | MUX_MODE0)	/* uart0_rxd.uart0_rxd */
			AM33XX_IOPAD(0x974, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart0_txd.uart0_txd */
		>;
	};

	uart1_pins: uart1_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x978, PIN_INPUT | MUX_MODE7)		/* uart1_ctsn.uart1_ctsn */
			AM33XX_IOPAD(0x97C, PIN_OUTPUT_PULLUP | MUX_MODE7)	/* uart1_rtsn.uart1_rtsn */
			AM33XX_IOPAD(0x980, PIN_INPUT_PULLUP | MUX_MODE0)	/* uart1_rxd.uart1_rxd */
			AM33XX_IOPAD(0x984, PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart1_txd.uart1_txd */
		>;
	};

	leds_pins: pinmux_leds_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x918, PIN_OUTPUT_PULLDOWN | MUX_MODE7)	/* mii1_rxdv.gpio3_4 */
		>;
	};

	ecap2_pins: backlight_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x99c, PIN_OUTPUT_PULLDOWN | MUX_MODE4)	/* mcasp0_ahclkr.eCAP2_in_PWM2_out */
		>;
	};

	usbdrv0_pins: usbdrv0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x968, PIN_INPUT_PULLUP | MUX_MODE7) /* uart0_ctsn.gpio1_8 */
			AM33XX_IOPAD(0xa1c, PIN_INPUT_PULLUP | MUX_MODE7)      /* usb0_drvvbus.gpio0_18 */
		>;
	};

	cpsw_default: cpsw_default {
		pinctrl-single,pins = <
			/* Slave 1 */
			AM33XX_IOPAD(0x90c, PIN_INPUT_PULLDOWN | MUX_MODE1)       /* mii1_crs.rmii1_crs_dv */
			AM33XX_IOPAD(0x910, PIN_INPUT_PULLUP | MUX_MODE1)	     /* mii1_rxerr.mii1_rxerr */
			AM33XX_IOPAD(0x914, PIN_OUTPUT_PULLDOWN | MUX_MODE1)      /* mii1_tx_en.rmii1_txen */
			AM33XX_IOPAD(0x924, PIN_OUTPUT_PULLDOWN | MUX_MODE1)      /* mii1_txd1.rmii1_txd1 */
			AM33XX_IOPAD(0x928, PIN_OUTPUT_PULLDOWN | MUX_MODE1)      /* mii1_txd0.rmii1_txd0 */
			AM33XX_IOPAD(0x93c, PIN_INPUT_PULLDOWN | MUX_MODE1)       /* mii1_rxd1.rmii1_rxd1 */
			AM33XX_IOPAD(0x940, PIN_INPUT_PULLDOWN | MUX_MODE1)       /* mii1_rxd0.rmii1_rxd0 */
			AM33XX_IOPAD(0x944, PIN_INPUT_PULLDOWN | MUX_MODE0)       /* rmii1_ref_clk.rmii1_refclk */
			AM33XX_IOPAD(0x934, PIN_INPUT_PULLUP | MUX_MODE7)	     /* mii1_rxd3.gpio2_18 ETH_INT*/
			AM33XX_IOPAD(0x938, PIN_OUTPUT_PULLUP | MUX_MODE7)	     /* mii1_rxd2.gpio2_19 ETH_EN*/
		>;
	};

	davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			/* MDIO */
			AM33XX_IOPAD(0x948, PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE0)	/* mdio_data.mdio_data */
			AM33XX_IOPAD(0x94c, PIN_OUTPUT_PULLUP | MUX_MODE0)			/* mdio_clk.mdio_clk */
		>;
	};

	mmc0_pins: pinmux-mmc0-pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x8fc, PIN_INPUT_PULLUP | MUX_MODE0)	/* (G16) mmc0_dat0.mmc0_dat0 */
			AM33XX_IOPAD(0x8f8, PIN_INPUT_PULLUP | MUX_MODE0)	/* (G15) mmc0_dat1.mmc0_dat1 */
			AM33XX_IOPAD(0x8f4, PIN_INPUT_PULLUP | MUX_MODE0)	/* (F18) mmc0_dat2.mmc0_dat2 */
			AM33XX_IOPAD(0x8f0, PIN_INPUT_PULLUP | MUX_MODE0)	/* (F17) mmc0_dat3.mmc0_dat3 */
			AM33XX_IOPAD(0x904, PIN_INPUT_PULLUP | MUX_MODE0)	/* (G18) mmc0_cmd.mmc0_cmd */
			AM33XX_IOPAD(0x900, PIN_INPUT_PULLUP | MUX_MODE0)	/* (G17) mmc0_clk.mmc0_clk */
		>;
	};

	mmc1_pins: mmc1_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x820, PIN_INPUT_PULLUP | MUX_MODE2)	/* gpmc_ad8.mmc1_dat0 */
			AM33XX_IOPAD(0x824, PIN_INPUT_PULLUP | MUX_MODE2)	/* gpmc_ad9.mmc1_dat1 */
			AM33XX_IOPAD(0x828, PIN_INPUT_PULLUP | MUX_MODE2)	/* gpmc_ad10.mmc1_dat2 */
			AM33XX_IOPAD(0x82c, PIN_INPUT_PULLUP | MUX_MODE2)	/* gpmc_ad11.mmc1_dat3 */
			AM33XX_IOPAD(0x880, PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn1.mmc1_clk */
			AM33XX_IOPAD(0x884, PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn2.mmc1_cmd */
			AM33XX_IOPAD(0x830, PIN_INPUT_PULLUP | MUX_MODE7)	/* gpmc_ad12.gpio1_12 */
		>;
	};
};

&lcdc {
	status = "okay";
};

&epwmss2 {
	status = "okay";

	ecap2: ecap@48304100 {
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <&ecap2_pins>;
	};
};

&tscadc {
	status = "okay";
	tsc {
		ti,wires = <4>;
		ti,x-plate-resistance = <200>;
		ti,coordinate-readouts = <5>;
		ti,wire-config = <0x00 0x11 0x22 0x33>;
		ti,charge-delay = <0x4000>;
		ti,open-delay = <0x1000>;
	};

	adc {
		ti,adc-channels = <4 5 6 7>;
	};

};

&epwmss2 {
	status = "okay";
};

&ehrpwm2 {
	status = "okay";
};

&mac {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&cpsw_default>;
	slaves = <1>;
};

&davinci_mdio {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&davinci_mdio_default>;

	ethphy0: ethernet-phy@0 {
		reg = <0>;
	};
};

&cpsw_emac0 {
	phy-handle = <&ethphy0>;
	phy-mode = "rmii";
};

&phy_sel {
	rmii-clock-ext;
};

&elm {
	status = "okay";
};

&spi0 {
	ti,spi-num-cs = <4>;
	dmas = <&edma 16 0
		&edma 17 0
		&edma 18 0
		&edma 19 0
		&edma 20 0
		&edma 21 0
		&edma 22 0
		&edma 23 0>;
	dma-names = "tx0", "rx0", "tx1", "rx1", "tx2", "rx2", "tx3", "rx3";
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins>;
	status = "okay";
	cs-gpios = <&gpio0 5 0>, <&gpio0 6 0>, <&gpio1 14 0>, <&gpio3 18 0>;

	mcp23s08: mcp23s08@1 {
		compatible = "microchip,mcp23s08";
		gpio-controller;
		#gpio-cells = <2>;
		microchip,spi-present-mask = <0x01>;
		spi-max-frequency = <1000000>;
		reg = <1>;
		status = "okay";

		pinctrl-names = "default";
		pinctrl-0 = <&gpiopullups>;

		gpiopullups: pinmux {
			pins =	"gpio0", "gpio1", "gpio2", "gpio3",
				"gpio4", "gpio5", "gpio6", "gpio7";
			bias-pull-up;
		};
	};
	flash: n25q128a13@0 {
		compatible = "jedec,spi-nor";
		spi-max-frequency = <40000000>;
		reg = <0>;
		status = "okay";
	};
};

&dcan0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&can0_pins>;
};

&i2c0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;

	clock-frequency = <100000>;

	tps: tps@2d {
		reg = <0x2d>;
	};

	si5351: clock-generator {
		#address-cells = <1>;
		#size-cells = <0>;
		#clock-cells = <1>;
		compatible = "silabs,si5351a-msop";
		reg = <0x60>;
		status = "okay";

		/* connect xtal input to 27MHz reference */
		clocks = <&ref27>;
		clock-names = "xtal";

		/* connect xtal input as source of pll0 and pll1 */
		silabs,pll-source = <0 0>, <1 0>;

		clkout0: clkout0 {
			reg = <0>;
			silabs,drive-strength = <8>;
			silabs,multisynth-source = <1>;
			silabs,clock-source = <0>;
			silabs,pll-master;
			silabs,disable-state = <3>;
			clock-frequency = <18432000>;
		 };

		clkout1: clkout1 {
			reg = <1>;
			silabs,drive-strength = <8>;
			silabs,multisynth-source = <0>;
			silabs,clock-source = <0>;
			silabs,pll-master;
			silabs,disable-state = <3>;
			clock-frequency = <8000000>;
	 	};

		clkout2: clkout2 {
			reg = <2>;
			silabs,drive-strength = <8>;
			silabs,multisynth-source = <1>;
			silabs,clock-source = <0>;
			silabs,disable-state = <3>;
			clock-frequency = <12288000>;
			silabs,pll-reset;
	 	};
	};
};

&mmc1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&mmc0_pins>;
	vmmc-supply = <&vmain>;
	bus-width = <4>;
	ti,non-removable;
};

&mmc2 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&mmc1_pins>;
	vmmc-supply = <&vmmc>;
	bus-width = <4>;
	cd-gpios = <&gpio1 12 GPIO_ACTIVE_LOW>;
};

&uart0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;
};

&uart1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
	rts-gpio = <&gpio0 13 GPIO_ACTIVE_HIGH>;
	rs485-rts-active-high;
	rs485-rts-delay = <1 1>;
};

&usb {
	status = "okay";
};

&usb_ctrl_mod {
	status = "okay";
};

&usb0_phy {
	status = "okay";
};

&usb1_phy {
	status = "okay";
};

&usb0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&usbdrv0_pins>;
	drv-gpios = <&gpio1 8 GPIO_ACTIVE_HIGH>;
	dr_mode = "otg";
};

&usb1 {
	status = "okay";
	dr_mode = "host";
};

&cppi41dma  {
	status = "okay";
};

#include "tps65910.dtsi"

&tps {
	vcc1-supply = <&vmain>;
	vcc2-supply = <&vmain>;
	vcc3-supply = <&vmain>;
	vcc4-supply = <&vmain>;
	vcc5-supply = <&vmain>;
	vcc6-supply = <&vmain>;
	vcc7-supply = <&vmain>;
	vccio-supply = <&vmain>;

	regulators {
		vrtc_reg: regulator@0 {
			regulator-always-on;
		};

		vio_reg: regulator@1 {
			regulator-always-on;
		};

		vdd1_reg: regulator@2 {
			/* VDD_MPU voltage limits 0.95V - 1.26V with +/-4% tolerance */
			regulator-name = "vdd_mpu";
			regulator-min-microvolt = <912500>;
			regulator-max-microvolt = <1312500>;
			regulator-boot-on;
			regulator-always-on;
		};

		vdd2_reg: regulator@3 {
			/* VDD_CORE voltage limits 0.95V - 1.1V with +/-4% tolerance */
			regulator-name = "vdd_core";
			regulator-min-microvolt = <912500>;
			regulator-max-microvolt = <1150000>;
			regulator-boot-on;
			regulator-always-on;
		};

		vdd3_reg: regulator@4 {
			regulator-always-on;
		};

		vdig1_reg: regulator@5 {
			regulator-always-on;
		};

		vdig2_reg: regulator@6 {
			regulator-always-on;
		};

		vpll_reg: regulator@7 {
			regulator-always-on;
		};

		vdac_reg: regulator@8 {
			regulator-always-on;
		};

		vaux1_reg: regulator@9 {
			regulator-always-on;
		};

		vaux2_reg: regulator@10 {
			regulator-always-on;
		};

		vaux33_reg: regulator@11 {
			regulator-always-on;
		};

		vmmc_reg: regulator@12 {
			regulator-always-on;
		};
	};
};
